:imagesdir: ./images
:toc: macro

= ROS ROV REV 2 Fabrication

toc::[]

== License

The materials for this class are licensed under the Apache license. See the file LICENSE for details.

Copyright 2015 D.P.Nielsen (Microsat)

Copyright 2015 F Douthit

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at
http://www.apache.org/licenses/LICENSE-2.0.

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

== Overview

This text describes the materials, tools and assembly of revision 2 of our robot.

== Materials and Tools

List of materials to make the robot from and the tools required to make it

=== Materials

==== Base Options
* Platform Material
** 9"x9”x1/4" King StarBoard® HDPE Marine Building Material 
from TAP Plastics or a similar provider or
** 9"x9”x1/8" Acrylic or
** 9"x9”x1/8" model plywood (3mm)

* We have a number of excellent base design options:
** https://github.com/ProgrammingRobotsStudyGroup/prsg-misc/blob/master/designs/20cm_chassis/20cm_base.svg[20cm SVG base] or

** https://github.com/ProgrammingRobotsStudyGroup/Designs-And-Notes/tree/master/designs/9in_3Rsquared[3RSquared] or

** https://github.com/ProgrammingRobotsStudyGroup/Designs-And-Notes/tree/master/designs/9in_alt1[9in alt1]


==== Common Components
Some of these links point to supplies which far exceed your needs. You may be able to find better prices or a more appropriate quantity from other vendors.

* Sand paper: 80 grit and 120 grit.
* 8 4-40 ½” pan head screws each with nut and lock washer.
* 4 4-40 ⅜” pan head screws.
* link:http://www.element14.com/community/community/raspberry-pi/raspberrypi2[Raspberry Pi 2]
* link:https://www.pololu.com/product/953[Pololu Ball Caster with 1/2″ Metal Ball]
* link:https://www.pololu.com/product/1081[Pololu Universal Aluminum Mounting Hub for 4mm Shaft, #4-40 Holes (2-Pack)]
* link:https://www.pololu.com/product/1428[Pololu Wheel 70×8mm Pair - Blue] - there are other colors
* link:https://www.pololu.com/product/2285[47:1 Metal Gearmotor 25Dx52L mm LP 6V with 48 CPR Encoder]
* link:https://www.pololu.com/product/2676[Pololu 25D mm Metal Gearmotor Bracket Pair]
* link:https://www.pololu.com/product/3117[A-Star 32U4 Robot Controller LV with Raspberry Pi Bridge]
* Tenergy Li-Ion 18650 7.4V 2200mAh Rechargeable Battery module with PCB
* Tenergy TLP4000 Li-Ion/Li-Po Battery Charger
* Raspberry Pi 2 Case
* 32GB SDCard of Raspberry Pi 2 image.
* ½“ or ¾” Velcro tape.
* http://www.amazon.com/gp/product/B00LFDSM6K[1 set of 2.1x5.5mm Female and Male DC Power Adapter Connector]
* http://www.amazon.com/gp/product/B00B4ZRPEY[22 gauge wire]
* http://www.amazon.com/gp/product/B00M5WLZDW[Flat ribbon cable]
* Pin headers: You can use either male of female pin headers, depending upon your preference. Myself I prefer female as they are less likely to bend or short. Male headers have the advantage of a lower profile.
** Female pin headers
** http://www.amazon.com/gp/product/B00TGOJE1W[Male pin headers]
* IR Sensors

=== Optional

* Pi Camera
* link:https://www.adafruit.com/products/2223[GPIO Stacking Header for Pi A+/B+/Pi 2 - Extra-long 2x20 Pins]
* http://www.amazon.com/gp/product/B009ZIILLI[USB Bluetooth BLE Adapter]
* link:https://www.digikey.com/product-detail/en/SN74LS86AN/296-1669-5-ND/277315[or similar: 2 XOR gates to combine the motor encoder pins to use only one interrupt per motor]
* link:https://www.adafruit.com/products/2310[Pi Hat perma board iff you want an additional layer for extra electronics]
* DS3231 based Real Time Clock for the Pi

=== Tools
Use caution when operating any tool. Always follow the manufacturers recommendations. Get trained and be safe!
[%hardbreaks]
* 40 Watt Full Spectrum laser (optional)
* Bandsaw or jigsaw
* Drill press
** 7/64“ Bit
** 5/64“ Bit
* Phillips screwdriver - take care that the blade fits the pan head screws nicely.
* Protective eyeglasses.
* Soldering station (highly recommended)
* Crimp tool for 0.1" jumper wires (optional)

== Assembly Instructions

=== Fabricating and Assembling The Chassis
Always wear protective eyeglasses when using equipment.
[%hardbreaks]
. You may want to print the design first at full scale in order to verify that everything fits on your material.

 For HDPE, you can use a 40 Watt Full Spectrum laser to etch the design onto the board. Attempting to cut this material results in melting instead of a clean cut. Etch the plan instead. Use the laser cutter on low power. Settings: 100% Speed, 10% power. No excessive melting, little particulates and residue. This material can be flamable so use care.

 Acrylic and wood can be cut on a laser cutter. Use care when attempting this as the acrylic can melt badly leaving messy edges. Acrylic and wood can catch fire, so keep tabs on the laser cutter.

 Another option is to print the design to paper and cut the outline with a mat knife or exacto knife to trace the pattern onto the material.

. If you only etched or scored the design into the base material, use a jigsaw or bandsaw to complete the task. The suggested materials should be easy to cut and shouldn’t take long. Sand the edges for a more finished appearance.

. Drill the motor mount holes using the 7/64“ Bit. These holes go all the way through board.

. Fasten the motor mounts.

. Drill the caster mount holes using the 5/64“ Bit. These holes go all the way through board.

. Fasten the casters.

. Put the Raspberry Pi 2 into its case.

. Mount the Pi case and contents using velcro. Secure to base with Velcro.

. Apply velcro to the battery. Add male connector to battery. Secure battery to base with Velcro.


=== Wiring the electronics
You may find it helpful to refer to this document throughout the electronics build: link:https://github.com/ProgrammingRobotsStudyGroup/Designs-And-Notes/blob/master/Data%20Sheets/Pololu/a-star-32u4-robot-controller-lv-with-raspberry-pi-bridge-pinout-power.pdf[A-Star pinout].

image::https://github.com/ProgrammingRobotsStudyGroup/Designs-And-Notes/blob/master/images/a_star_bridge_pinout_dia.jpg[width=340,alt"A-Star Pin Out Diagram"]

==== Add Pin headers

By far the most tedious and time consuming effort of the build, but worth it as it makes connecting the motors and sensors so much easier. You can use either male of female pin headers, depending upon your preference. Myself I prefer female as they are less likely to bend or short. Male headers have the advantage of a lower profile.

. At minimum you will want to add headers to:

 * The 32u4 GPIO, Vcc and Ground pins. 84 pins.
 * The power block. 6 pins.
 * The Raspberry Pi 2 GPIO pins. 26 pins.
 * The LS1 level shifter pins. 4 pins.

 That's 120 pins.

. Since you're at it, you might want to complete the pin head wiring:
 * The RPI power block: RPI5V, RPI3V3, AVR3V3 and RPISHDN. 6 pins.
 * The LS2 and LS3 level shifter pins. 8 pins.
 * The MISO / PDO, SCK, [overline]#RESET#, 5V, PB2, GND block. 6 pins.
 * The REGSHDN and STAT pins. 2 pins.
 * The Power control and shutodwn and unused pins. 3 pins. In this case I elected to add the unused pin for stability, but you can safely ignore it.

 Another 24 or 25 pins for a grand total of 144 or 145 pins

==== Wiring the Motor

. Connect the battery to the 2.1x5.5 mm male connector. If you use a connector with tension screws to secure the battery wires secure those. Note that the center conductor should be positive.

. Connect your motor to A-Star using the ribbon cable. Match the colors if you can (black to black and red to red). Remember, one of the motors should have the red & black wires reversed as it is on the opposite side. Connect the encoder power and ground. Connect encoder A and B. See table 1 for wiring harness details. This is the mapping I employed:
[%hardbreaks]
. Add the motor controller
  * Motor 1
  ** M1Pwr Red -> Motor 1 output
  ** M1Pwr Black -> The other Motor 1 output
  ** M1A -> A-Star pin 7
  ** M1B -> A-Star pin 11
  ** M1 Encoder Ground -> A-Star pin 7's GND
  ** M1 Encoder Vcc -> A-Star pin 7's Vcc
  * Motor 2 - note that M2Pwr red/black should be the reverse of M1
  ** M2Pwr Red -> Motor 2 output
  ** M2Pwr Black -> The other Motor 2 output
  ** M2A -> A-Star pin 15
  ** M2B -> A-Star pin 16
  ** M2 Encoder Ground -> A-Star pin 16's GND
  ** M2 Encoder Vcc -> A-Star pin 16's Vcc

. Communications between the A-Star to Raspberry Pi 2.
  a. RPi GPIO pin 14 (TXD0) -> A-Star pin 0 (RX)
  b. A-Star pin 1 (TX) -> 5V of 5V to 3V converter
  c. 3V of 5V to 3V converter -> RPi GPIO pin 15 (RXD0)

.Motor Wiring Harness
[width="100%",options="header,footer"]
|====================
| **Color** |  **Function**
| [red]*Red* |  motor power (connects to one motor terminal)
| *Black* |  motor power (connects to one motor terminal)
| [green]*Green* |  encoder GND
| [blue]*Blue* |  encoder Vcc (3.5 – 20 V)
| [yellow black-background]*Yellow* |  encoder A output
| [white black-background]*White* |  encoder B output
|====================

=== Powering the A-Star 32u4 bus

. You must provide voltage to the 32u4 optional power bus as it is not powered by default.

    a.  Cut and install a short jumper to connect [underline]#**south VREG**# to the [underline]#**south side power strip**# of the 32u4 bus. It makes sense to use the PE2 and the nearest of 2 VREG connections.

    b.  Cut and install a jumper between the power strip connection of [underline]#**NOT RST**# to power strip of 32u4’s [underline]#**RX pin 0**#.
    c.  Cut and install a jumper to connect the [underline]#**north VREG**# to the
    [underline]#**north side power strip**# of the 32u4 bus. It makes
    sense to use the PE2 and the nearest of 2 VREG connections.

=== Finishing Steps
. IR. This step is required for use of the IR sensors.
   * IR #1 --> A-Star A0
   * IR #2 --> A-Star A2
   * IR #3 --> A-Star A3
   * IR #4 --> A-Star A4
   * IR #5 --> A-Star A5
   * IR #6 (on the little robot) --> A-Star A6
   * Ground?

. Attach the A-Star 32u4 to the Raspberry Pi 2.
  * If you have the stacking header, you'll want to attach that to the Pi first. This should leave space between the 2 boards for connecting the Pi Camera.
  * Attach the camera
  * Seat the A-Star on the Raspberry Pi 2. Be sure to align to the proper pins.


== Making it go: A-Star 32U4 software build

=== Getting your development environment working
. Pololu has marvelous documentation. Follow https://www.pololu.com/docs/0J66/4[Getting Started] in Pololu’s documentation in order to install and test your board. 

  * Windows Drivers vs UDEV?
  ** If you are using Windows, start with https://www.pololu.com/docs/0J66/4.1[4.1 installing Windows drivers]. Skip 4.2.
  ** If you are using Linux:
  *** skip 4.1 
  *** Read https://github.com/pololu/a-star[== udev rules ==] section of Pololu's A-Star repository to install your https://github.com/pololu/a-star/blob/master/udev-rules/a-star.rules[udev rules].
  
  * Install the Arduino IDE and associated code as specified in https://www.pololu.com/docs/0J66/4.2[4.2]. Pololu also provides more generic documentation for their family of boards  https://github.com/pololu/a-star[in A-Star's github repository], covering some of the same topics, but not the specifically to the board we use.

  * Try some of the examples from Files->Examples->AStar32U4. BuzzerBasics will validate that you can connect to the A-Star. Motors runs a simple motor test.


=== Creating our robotics software
. Install https://github.com/GreyGnome/EnableInterrupt/[Enable Interrupt code].
 * Download the latest release of https://github.com/GreyGnome/EnableInterrupt/releases[Enable Interrupt].
 * Unzip the release into your *sketchbook/libraries* folder, where sketchbook is the root of your Arduino sketches. You can find the directory by selecting file->preferences in the Arduino IDE.  https://github.com/GreyGnome/EnableInterrupt/[Click here] to learn more about the library.

. Create a directory maker/PID to build the code.

. Download the latest release of the SimplePID library. Click here to learn about the library. Unzip the release into your sketchbook/libraries folder, where sketchbook is the root of your Arduino sketches. You can find the directory by selecting file->preferences in the Arduino IDE. This includes an example for testing the PID constants which can be used as an alternative to the A* sample. It uses pin numbers for the DFRobot Romeo, however, so those may need changing. Open via File > Examples > SimplePID > RomeoPIDTest.
