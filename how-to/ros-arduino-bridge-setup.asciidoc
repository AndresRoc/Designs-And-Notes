= ros_arduino_bridge Setup

`ros_arduino_bridge` is a set of ROS packages designed to make integrating an Arduino-compatible MCU into ROS
easier. It consists of these packages:

* `ros_arduino_bridge` -- The main package, empty.
* `ros_arduino_msgs` -- Definitions of ROS messages used by `ros_arduino_bridge`.
* `ros_arduino_python` -- Python modules and a ROS node that handles the communication.
* `ros_arduino_firmware` -- An Arduino sketch and libraries for the Arduino side.

== Summary of Integration

Here's a summary of what you have to do to use `ros_arduino_bridge` for your PRSG2-style robot:

. Get the code.
. Choose your communication style, USB serial, UART serial, or I2C.
. Choose the pins to use for the IR sensors and the wheel encoders.
. Edit the Arduino sketch to use your choices.
. Upload the sketch to the A-Star board.
. Create a launch file incorporating your sensor definitions.
. Launch ROS and test the setup.

Each step is detailed in sections below.

== Getting the Code

Marco has forked
link:https://github.com/hbrobotics/ros_arduino_bridge[the original project] and modified it to add I2C communication.
Mark R. has added some fixes and enhancements which Marco has incorporated. Right now it is best to get the latest from
Marco's `indigo-devel` branch (the default):

link:https://github.com/mw46d/ros_arduino_bridge[Marco's `ros_arduino_bridge` repository]

Clone the repository into your Catkin workspace in the `catkin_ws/src` directory. (Note: If you are not running
the Arduino IDE on your robot, then clone the code again onto the computer where you use the Arduino IDE.)
